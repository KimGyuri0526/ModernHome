<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.modernhome.mapper.LineMapper">
	
	<!-- 라인 목록 조회 -->
	<select id="getLineList" resultType="com.modernhome.domain.LineVO">
		SELECT line_id, line_num, line_name, use_yn, reg_date, update_date, l.emp_id, l.update_emp_id,
		CASE
			WHEN l.update_emp_id IS NULL THEN
				(SELECT emp_name FROM employee WHERE emp_id = l.emp_id)
			ELSE
				(SELECT emp_name FROM employee WHERE emp_id = l.update_emp_id)
		END AS emp_name
		FROM line l
		LEFT JOIN employee e ON l.emp_id = e.emp_id
		ORDER BY line_id DESC
	</select>
	<!-- 라인 목록 조회 -->
	
	<!-- 라인 목록 검색 -->
	<select id="getLineListSearch" resultType="com.modernhome.domain.LineVO">
		SELECT line_id, line_num, line_name, use_yn, reg_date, update_date, l.emp_id, l.update_emp_id,
		CASE
			WHEN l.update_emp_id IS NULL THEN
				(SELECT emp_name FROM employee WHERE emp_id = l.emp_id)
			ELSE
				(SELECT emp_name FROM employee WHERE emp_id = l.update_emp_id)
		END AS emp_name
		FROM line l
		LEFT JOIN employee e ON l.emp_id = e.emp_id
		<where>
			<if test="line_num != ''">
				AND line_num like CONCAT('%', #{line_num}, '%')
			</if>
			<if test="line_name != ''">
				AND line_name like CONCAT('%', #{line_name}, '%')
			</if>
			<if test="use_yn != '전체'">
				AND use_yn = #{use_yn}
			</if>
		</where>
		ORDER BY line_id DESC
	</select>
	<!-- 라인 목록 검색 -->
	
	<!-- 라인 등록 -->
	<insert id="regLine">
		<selectKey keyProperty="line_num" resultType ="String" order="BEFORE">
		SELECT CONCAT(SUBSTRING(line_num, 1, 2), LPAD(max(line_id) + 1, 4, '0'))
		FROM line
		</selectKey>
		insert into line(line_num, line_name, use_yn, reg_date, emp_id)
		values (#{line_num}, #{line_name}, #{use_yn}, now(), #{emp_id})
	</insert>
	<!-- 라인 등록 -->
	
	<!-- 라인 수정 -->
	<update id="updateLine">
		UPDATE line 
		SET use_yn = #{use_yn}, update_date = now(), update_emp_id = #{emp_id}
		WHERE line_id = #{line_id}
	</update>
	<!-- 라인 수정 -->
	
	<!-- 라인 삭제 -->
	<delete id="deleteLine">
		delete from line 
		where line_id = #{line_id}
	</delete>
	<!-- 라인 삭제 -->
	
	<!-- 라인 수정 때마다 라인 가동중지 테이블에 이력 저장 -->
	<insert id="regLineShutdown">
		INSERT INTO line_shutdown (line_id, ls_yn, ls_rsns, emp_id)
		VALUES (#{line_id}, #{ls_yn}, #{ls_rsns}, #{emp_id})
	</insert>
	<!-- 라인 수정 때마다 라인 가동중지 테이블에 이력 저장 -->
	
	<!-- 특정 라인의 가동 중지 내역 출력 -->
	<select id="listLineShutdown" resultType="LineShutdownVO">
		SELECT line_num, ls_yn, ls_rsns, ls.reg_date, ls.emp_id, emp.emp_name 
		FROM line_shutdown ls 
		JOIN line li ON li.line_id = ls.line_id 
		JOIN employee emp ON emp.emp_id = ls.emp_id 
		WHERE li.line_id = #{line_id}
	</select>
	<!-- 특정 라인의 가동 중지 내역 출력 -->
	
	
	<select id="shutdownCnt" resultType="com.modernhome.domain.LineVO">
		SELECT DATE_FORMAT(reg_date, '%Y-%m') AS month, COUNT(*) / (SELECT count(DISTINCT line_id) FROM line) AS count
		FROM line_shutdown
		WHERE ls_yn = '중지'
		GROUP BY DATE_FORMAT(reg_date, '%Y-%m')
		ORDER BY month
	</select>
	

</mapper>