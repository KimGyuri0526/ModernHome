<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.modernhome.mapper.EmployeeMapper">
	
	<!-- 로그인 -->
	<select id="login" resultType="com.modernhome.domain.EmployeeVO">
		select * from employee
		where emp_id=#{emp_id} and emp_pw=#{emp_pw}
	</select>
	<!-- 로그인 -->
	
	
	
	<!-- 전체 글 수 계산 (페이징) -->
	<select id="empTotalCnt" resultType="int">
		SELECT COUNT(*) FROM employee
	</select>
	<!-- 전체 글 수 계산 -->
	
	
	
	<!-- 사원리스트 불러오기 -->
	<select id="employeeList" resultType="com.modernhome.domain.EmployeeVO">
		SELECT * FROM employee
		LIMIT #{startPage}, #{pageSize}
	</select>
	<!-- 사원리스트 불러오기 -->
	
	
	
	
	<!-- 사원리스트 검색(페이징) -->
	<select id="employeeListSearch" resultType="com.modernhome.domain.EmployeeVO">
		SELECT * FROM employee 
		<where>
			<if test="evo.emp_id != null">
				emp_id LIKE CONCAT('%', #{evo.emp_id}, '%') 
			</if>
			<if test="evo.emp_name != ''">
				AND emp_name LIKE CONCAT('%', #{evo.emp_name}, '%') 
			</if>
			<if test="evo.emp_dept != '전체'">
				AND emp_dept = #{evo.emp_dept}
			</if>
			<if test="evo.emp_rank != '전체'">
				AND emp_rank = #{evo.emp_rank}
			</if>
			<if test="evo.emp_state != '전체'">
				AND emp_state = #{evo.emp_state}
			</if>
		</where>
		LIMIT #{pvo.startPage}, #{pvo.pageSize}
	</select>
	<!-- 사원리스트 검색 -->
	
	<!-- 검색 결과 개수 계산(페이징) -->
	<select id="empSearchCnt" resultType="int">
		SELECT COUNT(*) FROM employee
		<where>
			<if test="emp_id != null">
				emp_id LIKE CONCAT('%', #{emp_id}, '%') 
			</if>
			<if test="emp_name != ''">
				AND emp_name LIKE CONCAT('%', #{emp_name}, '%') 
			</if>
			<if test="emp_dept != '전체'">
				AND emp_dept = #{emp_dept}
			</if>
			<if test="emp_rank != '전체'">
				AND emp_rank = #{emp_rank}
			</if>
			<if test="emp_state != '전체'">
				AND emp_state = #{emp_state}
			</if>
		</where>
	</select>
	<!-- 검색 결과 개수 계산 -->
	
	
	
	
	<!-- 사원등록 -->
	<insert id="regEmployee">
		<selectKey keyProperty="emp_id" resultType="int" order="BEFORE">
		SELECT CONCAT(YEAR(CURRENT_DATE()), LPAD(COALESCE(MAX(SUBSTRING(emp_id, 5)) + 1, '1'), 4, '0'))
		FROM employee
		</selectKey>
		
		
		INSERT INTO employee (emp_id, emp_pw, emp_name, emp_gender, emp_birth,
			emp_dept, emp_rank, emp_state, emp_tel,
			emp_email, emp_hire_date,
			emp_auth)
		
		VALUES (#{emp_id}, SUBSTR(#{emp_tel}, LENGTH(#{emp_tel}) - 3), #{emp_name}, #{emp_gender},
			CASE WHEN #{emp_birth} = '' THEN NULL ELSE #{emp_birth} END,
			#{emp_dept}, #{emp_rank}, #{emp_state}, #{emp_tel}, #{emp_email},
			CASE WHEN #{emp_hire_date} = '' THEN CURRENT_TIMESTAMP ELSE #{emp_hire_date} END,
			CASE WHEN #{emp_auth} = NULL THEN 1 ELSE #{emp_auth} END)
		
	</insert>
	<!-- 사원등록 -->
	
	
	<!-- 사원삭제 -->
	<delete id="deleteEmployee">
		DELETE FROM employee WHERE emp_id = #{emp_id}
	</delete>
	<!-- 사원삭제 -->
	
	<!-- 사원업데이트 -->
	<update id="updateEmployee">
		UPDATE employee SET emp_name = #{emp_name}, emp_dept = #{emp_dept}, emp_rank = #{emp_rank}, emp_state = #{emp_state}, emp_tel = #{emp_tel},
		emp_birth = CASE WHEN #{emp_birth} = '' THEN NULL ELSE #{emp_birth} END,
		emp_rsgnt_date = CASE WHEN #{emp_rsgnt_date} = '' THEN NULL ELSE #{emp_rsgnt_date} END,
		emp_start_leave_date = CASE WHEN #{emp_start_leave_date} = '' THEN NULL ELSE #{emp_start_leave_date} END,
		emp_end_leave_date = CASE WHEN #{emp_end_leave_date} = '' THEN NULL ELSE #{emp_end_leave_date} END,
		emp_auth = #{emp_auth}
		
		WHERE emp_id = #{emp_id}
	</update>
	<!-- 사원업데이트 -->
	
	
</mapper>